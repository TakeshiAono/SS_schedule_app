{"version":3,"file":"app.js","mappings":"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","sources":["webpack://sceduleapp/./src/EditTablePosConsts.ts","webpack://sceduleapp/./src/Editter.ts","webpack://sceduleapp/./src/main.ts","webpack://sceduleapp/./src/model/Model.ts","webpack://sceduleapp/./src/model/Project.ts","webpack://sceduleapp/./src/sheets.ts","webpack://sceduleapp/webpack/bootstrap","webpack://sceduleapp/webpack/runtime/global","webpack://sceduleapp/./src/app.ts"],"sourcesContent":["export const RegisterEditRange = \"A3:B3\"","import { EditSheet } from \"./sheets\";\nimport { RegisterEditRange } from \"./EditTablePosConsts\"\n\nexport default class Editor {\n  static getProjectEditRecord (): any {\n    return EditSheet?.getRange(RegisterEditRange).getValues()\n  } \n\n  static getScheduleEditRecord (): any {\n    // return EditSheet?.getRange(RegisterEditRange).getValues()\n  } \n\n  static getUserEditRecord (): any {\n    // return EditSheet?.getRange(userEditRange).getValues()\n  } \n}","import ProjectsModel from \"./model/Project\"\nimport { ProjectsTableColumnTypes } from \"./types/table\"\nimport { RegisterEditRange } from \"./EditTablePosConsts\"\nimport Editor from \"./Editter\";\n\n// const editor = new Editor()\n\nexport const record: ProjectsTableColumnTypes = {\n  id: 1,\n  name: \"testProject\",\n  finalDate: new Date(Date.now()),\n  delayRate: null,\n  updateAt: new Date(Date.now()),\n  createdAt: new Date(Date.now()),\n}\n\nexport const registerProjectRecord = () => {\n  const record: [string, string] = Editor.getProjectEditRecord()[0]\n  const date = new Date(record[1])\n  date.setDate(date.getDate() + 1)\n  record[1] = date.toLocaleDateString()\n  const projectsModel = new ProjectsModel()\n  projectsModel.create(record)\n}\n\nexport const registerScheduleRecord = () => {\n  const record: [string, string] = Editor.getScheduleEditRecord()[0]\n  const date = new Date(record[1])\n  date.setDate(date.getDate() + 1)\n  record[1] = date.toLocaleDateString()\n  const projectsModel = new ProjectsModel()\n  projectsModel.create(record)\n}\n\nexport const registerUserRecord = () => {\n  const record: [string, string] = Editor.getUserEditRecord()[0]\n  const date = new Date(record[1])\n  date.setDate(date.getDate() + 1)\n  record[1] = date.toLocaleDateString()\n  const projectsModel = new ProjectsModel()\n  projectsModel.create(record)\n}","// import { TableColumnNames } from \"../types/table\";\nimport { ProjectsSheet } from \"../sheets\";\n// import { Store } from \"./Store\";\n\nexport default abstract class Model {\n  initializationRowNumber = 3;\n  public addableRowNumber: number\n  public lastId: number\n  public willNewId: number\n  // public store: Store\n\n  constructor() {\n    // this.store = store\n    this.addableRowNumber = this.#lastIndexNumber()\n    //最初の入力時にはlastIdを0とする。\n    this.lastId = this.addableRowNumber === 3 ? 0 : this.#getValue(this.addableRowNumber - 1, 1)\n    this.willNewId = this.lastId + 1\n  }\n\n  create(record: [string, string]) {\n    const addRowNum = this.#lastIndexNumber()\n    ProjectsSheet?.getRange(addRowNum, 1 , 1 , 6).setValues(\n      [[\n        this.willNewId,\n        ...record,\n        null,\n        new Date().toLocaleDateString(),\n        new Date().toLocaleDateString(),\n      ]]\n    )\n    this.addableRowNumber = addRowNum + 1\n  }\n\n  #lastIndexNumber(): number {\n    let rowCounter: number = this.initializationRowNumber\n    while (this.#getValue(rowCounter, 1) !== \"\") {\n      rowCounter++\n    }\n    return rowCounter\n  }\n\n  #getValue(row: number, column: number) {\n    return ProjectsSheet?.getRange(row, column).getValue()\n  }\n}\n","import { TableColumnNames, ProjectsTableColumnTypes } from \"../types/table\";\nimport { ProjectsSheet } from \"../sheets\";\nimport Model from \"./Model\";\n\nexport default class Project extends Model {\n\n  constructor() {\n    super()\n    // this.addableRowNumber = this.#lastIndexNumber()\n    // //最初の入力時にはlastIdを0とする。\n    // this.lastId = this.addableRowNumber === 3 ? 0 : this.#getValue(this.addableRowNumber - 1, 1)\n    // this.willNewId = this.lastId + 1\n  }\n\n  // create( record: [string, string]) {\n  //   const addRowNum = this.#lastIndexNumber()\n  //   ProjectsSheet?.getRange(addRowNum, 1 , 1 , 6).setValues(\n  //     [[\n  //       this.willNewId,\n  //       ...record,\n  //       null,\n  //       new Date().toLocaleDateString(),\n  //       new Date().toLocaleDateString(),\n  //     ]]\n  //   )\n  //   this.addableRowNumber = addRowNum + 1\n  // }\n\n  // #lastIndexNumber(): number {\n  //   let rowCounter: number = this.initializationRowNumber\n  //   while (this.#getValue(rowCounter, 1) !== \"\") {\n  //     rowCounter++\n  //   }\n  //   return rowCounter\n  // }\n\n  // #getValue(row: number, column: number) {\n  //   return ProjectsSheet?.getRange(row, column).getValue()\n  // }\n}\n","export const spreadSheet: GoogleAppsScript.Spreadsheet.Spreadsheet | null  = SpreadsheetApp.getActiveSpreadsheet()\nexport const GanttSheet: GoogleAppsScript.Spreadsheet.Sheet | null = spreadSheet.getSheetByName(\"gantt\")\nexport const ProjectsSheet: GoogleAppsScript.Spreadsheet.Sheet | null = spreadSheet.getSheetByName(\"projects\")\nexport const SchedulesSheet: GoogleAppsScript.Spreadsheet.Sheet | null = spreadSheet.getSheetByName(\"Schedules\")\nexport const EditSheet: GoogleAppsScript.Spreadsheet.Sheet | null = spreadSheet.getSheetByName(\"edit\")","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","import { registerProjectRecord, registerScheduleRecord, registerUserRecord } from '@/main';\n\ndeclare let global: any;\nglobal.registerProjectRecord = registerProjectRecord;\n// global.registerScheduleRecord = registerScheduleRecord;\n// global.registerUserRecord = registerUserRecord;"],"names":[],"sourceRoot":""}